@using Parking.UI.Models
@using Parking.UI.Services
@inject IVeiculoService VeiculoService
@inject ISnackbar Snackbar

<EditForm Model="@Model" OnValidSubmit="OnPostNovoVeiculoAsync">
    <MudDialog>
        <TitleContent>
            NOVO VEÍCULO
        </TitleContent>
        <DialogContent>
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="6">
                    <MudTextField Variant="Variant.Outlined"
                                  @bind-Value="@Model.Placa"
                                  For="@(() => Model.Placa)"
                                  Label="Digite a placa do veículo"
                                  Required="true" />
                </MudItem>
                <MudItem xs="6">
                    <MudTextField Variant="Variant.Outlined"
                                  @bind-Value="@Model.Modelo"
                                  For="@(() => Model.Modelo)"
                                  Label="Digite o modelo do veículo"
                                  Required="true" />
                </MudItem>
                <MudItem xs="6">
                    <MudTextField Variant="Variant.Outlined"
                                  @bind-Value="@Model.Cor"
                                  For="@(() => Model.Cor)"
                                  Label="Digite a cor do veículo"
                                  Required="true" />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancelar</MudButton>
            <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Salvar e criar</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private VeiculoModel Model = new();

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    public async void OnPostNovoVeiculoAsync()
    {
        try
        {
            await VeiculoService.CreateVeiculo(new CreateVeiculoRequest(Model.Placa, Model.Modelo, Model.Cor));
            Submit();
        }
        catch
        {
            Snackbar.Add("Ocorreu um erro ao tentar enviar a requisição ao servidor. Tente novamente mais tarde!", Severity.Error);
        }
    }
}
